{"version":3,"sources":["MyComponents.js","App.js","index.js"],"names":["Loading","props","useEffect","audioSlide","addEventListener","loaded","audioLobby","Welcome","isPlaying","loop","className","id","transitionName","transitionAppear","transitionAppearTimeout","transitionEnter","transitionLeave","onSubmit","database","htmlFor","type","name","min","max","defaultValue","value","BouncingBalls","PlayGame","answers","results","questionNumber","push","incorrect_answers","correct_answer","uniqueAnswers","Set","array","i","length","j","Math","floor","random","shuffle","selectAnswer","e","saveAnswerOrder","checkAnswer","timer","autoPlay","check","src","duration","colors","size","rotation","onComplete","particleEffect","Results","correct","answerCorrect","nextQuestion","saveResult","transfer","incrementQuestion","Confetti","Rain","onClick","transferToStartMenu","Question","number","answered","answerArray","playerAnswer","question","cleanString","category","difficulty","Choices","result","disabled","choices","console","log","GameOver","percentCorrect","audio","numberOfQuestions","wrong","Fireworks","Smoke","response","string","replace","options","background","color","opacity","fullScreen","enable","fpsLimit","emitters","direction","life","count","delay","rate","quantity","width","height","position","y","x","particles","destroy","mode","split","factor","stroke","collisions","animation","speed","minimumValue","sync","startValue","shape","move","gravity","straight","outMode","rotate","path","acceleration","inverse","maxSpeed","outModes","default","top","density","value_area","image","links","distance","bottom","attract","lineLinked","blink","consent","rotateX","rotateY","bounce","area","limit","character","fill","font","style","weight","polygon","nb_sides","draw","lineColor","lineWidth","radius","scale","url","drift","decay","tilt","roll","darken","wobble","responsive","maxWidth","sides","out_mode","interactivity","detect_on","events","onHover","parallax","force","smooth","resize","modes","grab","line_linked","bubble","repulse","particles_nb","remove","detectRetina","GameScreen","currentState","transferToEnd","App","Audio","audioLoadedCount","state","gameState","apiCall","bind","increment","transferToStat","this","setState","preventDefault","target","amount","fetch","then","json","data","response_code","alert","error","questionInfo","concat","React","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.11e8d217.chunk.js","sourcesContent":["import React, { useEffect } from 'react'\r\nimport { CSSTransitionGroup } from 'react-transition-group'\r\nimport { CountdownCircleTimer } from 'react-countdown-circle-timer'\r\nimport Particles from \"react-tsparticles\";\r\n\r\nfunction Loading(props) {\r\n\r\n\r\n    useEffect(() => {\r\n        props.audioSlide.addEventListener('onCanPlayThrough', props.loaded());\r\n        props.audioLobby.addEventListener('onCanPlayThrough', props.loaded());\r\n    });\r\n\r\n    return (\r\n        <div>\r\n\r\n        </div>\r\n        );\r\n}\r\n\r\n//component that will display the welcome screen\r\nfunction Welcome(props) {\r\n    props.audioSlide.isPlaying = true;\r\n    props.audioLobby.isPlaying = true;\r\n    props.audioLobby.loop = true;\r\n\r\n    return (\r\n        <div>\r\n        <div className=\"content\">\r\n            <div id=\"welcome-div\" className=\"welcome\">\r\n                <CSSTransitionGroup\r\n                    transitionName=\"welcome-title\"\r\n                    transitionAppear={true}\r\n                    transitionAppearTimeout={2000}\r\n                    transitionEnter={false}\r\n                    transitionLeave={false}>\r\n                    <h1 className=\"welcome title\">Welcome to <span id=\"app-title\">Quizmon</span> - the triva app</h1>\r\n                </CSSTransitionGroup>\r\n            </div>\r\n            <CSSTransitionGroup\r\n                transitionName=\"input-fade-in\"\r\n                transitionAppear={true}\r\n                transitionAppearTimeout={500}\r\n                transitionEnter={false}\r\n                transitionLeave={false}>\r\n                <div id=\"input-div\">\r\n                    <hr />\r\n                    <form onSubmit={props.database}>\r\n                        <div id=\"input-fields\">\r\n                            <label htmlFor=\"amount\">Number of Questions: </label>\r\n                            <input type=\"number\" id=\"amount\" name=\"amount\" min=\"1\" max=\"50\" defaultValue=\"10\" /><br />\r\n                            <label htmlFor=\"category\">Category: </label>\r\n                            <select id=\"category\" name=\"category\">\r\n                                <option value=\"any\">Random</option>\r\n                                <option value=\"9\">General Knowledge</option>\r\n                                <option value=\"10\">Entertainment: Books</option>\r\n                                <option value=\"11\">Entertainment: Film</option>\r\n                                <option value=\"12\">Entertainment: Music</option>\r\n                                <option value=\"13\">Entertainment: Musicals & Theaters</option>\r\n                                <option value=\"14\">Entertainment: Television</option>\r\n                                <option value=\"15\">Entertainment: Video Games</option>\r\n                                <option value=\"16\">Entertainment: Board Games</option>\r\n                                <option value=\"29\">Entertainment: Comics</option>\r\n                                <option value=\"31\">Entertainment: Japanese Anime & Manga</option>\r\n                                <option value=\"32\">Entertainment: Cartoon & Animations</option>\r\n                                <option value=\"17\">Science & Nature</option>\r\n                                <option value=\"18\">Science: Computers</option>\r\n                                <option value=\"19\">Science: Mathematics</option>\r\n                                <option value=\"30\">Science: Gadgets</option>\r\n                                <option value=\"20\">Mythology</option>\r\n                                <option value=\"21\">Sports</option>\r\n                                <option value=\"22\">Geography</option>\r\n                                <option value=\"23\">History</option>\r\n                                <option value=\"24\">Politics</option>\r\n                                <option value=\"25\">Art</option>\r\n                                <option value=\"26\">Celebrities</option>\r\n                                <option value=\"27\">Animals</option>\r\n                                <option value=\"28\">Vehicles</option>\r\n                            </select><br />\r\n                            <label htmlFor=\"difficulty\">Difficulty: </label>\r\n                            <select id=\"difficulty\" name=\"difficulty\">\r\n                                <option value=\"any\">Random</option>\r\n                                <option value=\"easy\">Easy</option>\r\n                                <option value=\"medium\">Medium</option>\r\n                                <option value=\"hard\">Hard</option>\r\n                            </select><br />\r\n                            <label htmlFor=\"type\">Question type: </label>\r\n                            <select id=\"type\" name=\"type\">\r\n                                <option value=\"any\">Random</option>\r\n                                <option value=\"multiple\">Multiple Choice</option>\r\n                                <option value=\"boolean\">True / False</option>\r\n                            </select>\r\n                        </div>\r\n                        <button type=\"submit\" className=\"menu button\">Start Game</button>\r\n                    </form>\r\n                </div>\r\n            </CSSTransitionGroup>\r\n            </div>\r\n            <BouncingBalls />\r\n        </div>\r\n    ); \r\n}\r\n\r\n//component that will display game and handle game logic \r\nfunction PlayGame(props) {\r\n    let answers = [];\r\n\r\n    //helper function to shuffle an array\r\n    function shuffle(array) {\r\n        for (let i = array.length - 1; i > 0; i--) {\r\n            let j = Math.floor(Math.random() * (i + 1));\r\n            [array[i], array[j]] = [array[j], array[i]];\r\n        }\r\n        return array;\r\n    }\r\n    if (props.results[props.questionNumber - 1].type == \"boolean\") {\r\n        answers.push(\"True\");\r\n        answers.push(\"False\");\r\n    }\r\n    else {\r\n        answers = props.results[props.questionNumber - 1].incorrect_answers;\r\n\r\n        //Randomizing answer order\r\n        answers.push(props.results[props.questionNumber - 1].correct_answer);\r\n\r\n        //Removing duplicates from the array\r\n        let uniqueAnswers = [...new Set(answers)];\r\n\r\n        answers = shuffle(uniqueAnswers);\r\n    }\r\n\r\n    \r\n\r\n\r\n    function selectAnswer(e) {\r\n        props.saveAnswerOrder(answers);\r\n        props.checkAnswer(e);\r\n    }\r\n\r\n    let timer = <div id=\"timer-wrap\">\r\n        <audio className=\"game audio\" id=\"countdown-music\" autoPlay={!props.check}>\r\n            <source src=\"countdown.wav\" />\r\n        </audio>\r\n        <CountdownCircleTimer isPlaying duration={30} colors={[\r\n            ['#18A835', 0.33],\r\n            ['#E0D401', 0.33],\r\n            ['#E52809', 0.33],\r\n        ]} size={75} rotation='counterclockwise' onComplete={selectAnswer} />\r\n    </div>;\r\n    let results = null;\r\n    let particleEffect = <BouncingBalls />;\r\n    if (props.check) {\r\n        timer = <div id=\"timer-wrap\"></div>;\r\n        results = <Results correct={props.answerCorrect} nextQuestion={nextQuestion} />;\r\n        particleEffect = (props.answerCorrect) ? <Confetti /> : <Rain />;\r\n    }\r\n\r\n    //Helper function to move the player to the next question and save their answer result\r\n    function nextQuestion() {\r\n\r\n        props.saveResult(props.answerCorrect, props.results[props.questionNumber - 1]);\r\n\r\n        //Checking if this is the last question or not and changing what happens on click based of that\r\n        if (props.questionNumber == props.results.length) {\r\n            props.transfer();\r\n        }\r\n        else {\r\n            props.incrementQuestion();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"content\">\r\n                <button className=\"menu button\" id=\"escape\" onClick={props.transferToStartMenu}>&#x2716;</button>\r\n            {timer}\r\n            <Question results={props.results[props.questionNumber - 1]} number={props.questionNumber} answered={props.check} answerArray={props.answerArray} playerAnswer={props.playerAnswer}\r\n                answers={answers} selectAnswer={selectAnswer} />\r\n            {results}\r\n            </div>\r\n            {particleEffect}\r\n        </div>\r\n        );\r\n}\r\n\r\nfunction Question(props) {\r\n\r\n\r\n    let question = props.results.question;\r\n\r\n    //changing special entities to corresponding character\r\n    question = cleanString(question);\r\n\r\n    return (\r\n        <div id=\"question-wrap\">\r\n            <div id=\"question-info\">\r\n                <CSSTransitionGroup\r\n                    transitionName=\"question-anim\"\r\n                    transitionAppear={true}\r\n                    transitionAppearTimeout={500}\r\n                    transitionEnter={false}\r\n                    transitionLeave={false}>\r\n                    <h1>{props.results.category}</h1>\r\n                    <h3>Difficulty: {props.results.difficulty}</h3>\r\n                    <h2>{props.number}. {question}</h2>\r\n                </CSSTransitionGroup>\r\n            </div>\r\n            <Choices result={props.results} answered={props.answered} answerArray={props.answerArray} playerAnswer={props.playerAnswer}\r\n                answers={props.answers} selectAnswer={props.selectAnswer} />\r\n        </div>\r\n        );\r\n}\r\n\r\nfunction Choices(props) {\r\n    let disabled = false;\r\n\r\n    let choices = [];\r\n    if (props.answered) {\r\n        disabled = true;\r\n    }\r\n    let className = \"\";\r\n\r\n    \r\n\r\n        //Checking if the question if there is a question order saved\r\n    if (props.answerArray.length > 0) {\r\n        for (let i = 0; i < props.answerArray.length; i++) {\r\n\r\n            className = \"\";\r\n\r\n\r\n            if (props.answerArray[i] == props.result.correct_answer) {\r\n                className = \"right-answer \";\r\n            }\r\n            else if (props.answerArray[i] == props.playerAnswer) {\r\n                className = \"wrong-answer \";\r\n            }\r\n\r\n            if (props.result.type == \"boolean\") { className += \"boolean \"; }\r\n            else { className += \"mult-choice \"; }\r\n\r\n            choices.push(<button value={props.answerArray[i]} key={i} className={className} disabled={disabled} >{cleanString(props.answerArray[i])}</button>);\r\n        }\r\n    }\r\n    else {\r\n\r\n        if (props.result.type == \"boolean\") {\r\n            console.log(props.result);\r\n            className += \"boolean \";\r\n            choices.push(<button value=\"True\" className={className} disabled={disabled} onClick={props.selectAnswer}>True</button>);\r\n            choices.push(<button value=\"False\" className={className} disabled={disabled} onClick={props.selectAnswer}>False</button>);\r\n        }\r\n        else {\r\n            className += \"mult-choice \";\r\n            for (let i = 0; i < props.answers.length; i++) {\r\n                choices.push(<button value={props.answers[i]} key={i} onClick={props.selectAnswer} className={className} disabled={disabled} >{cleanString(props.answers[i])}</button>);\r\n            }\r\n        }\r\n\r\n        \r\n    }\r\n    \r\n\r\n\r\n    \r\n    \r\n\r\n    return <div id=\"answers\">\r\n        <CSSTransitionGroup\r\n            transitionName=\"choice-growing\"\r\n            transitionAppear={true}\r\n            transitionAppearTimeout={1000}\r\n            transitionEnter={false}\r\n            transitionLeave={false}>\r\n            {choices}\r\n        </CSSTransitionGroup>\r\n    </div>;\r\n}\r\n\r\nfunction Results(props) {\r\n    if (props.correct)\r\n    {\r\n        return (\r\n            <div>\r\n                <audio autoPlay={true} id=\"right-buzz\" className=\"game audio right\">\r\n                    <source src=\"correct.wav\" />\r\n                </audio>\r\n                <button onClick={props.nextQuestion} id=\"next-button\" className=\"menu button\">Next &#10140;</button>\r\n            </div>\r\n            )\r\n    }\r\n    else\r\n    {\r\n        return (\r\n            <div>\r\n                <audio autoPlay={true} id=\"wrong-buzz\" className=\"game audio wrong\">\r\n                    <source src=\"incorrect.mp3\" />\r\n                </audio>\r\n                <button onClick={props.nextQuestion} id=\"next-button\" className=\"menu button\">Next &#10140;</button>\r\n            </div>\r\n            )\r\n\t}\r\n}\r\n\r\n\r\n//component that will display the end game screen\r\nfunction GameOver(props) {\r\n    //Variable to hold the number of questions the player answered\r\n    let numberOfQuestions = props.correct.length + props.wrong.length;\r\n\r\n    //variable to hold percent correct the playerAnswered\r\n    let percentCorrect;\r\n\r\n    percentCorrect = Math.floor((props.correct.length * 100) / (numberOfQuestions));\r\n\r\n    let particleEffect = (percentCorrect > 50) ? <Fireworks /> : <Smoke />;\r\n    let audio;\r\n    let response = <h1 id=\"end-response\">Better luck next time</h1>;\r\n    if (percentCorrect > 50) {\r\n        audio = <audio autoPlay={true} loop={true}><source src=\"fireworks.wav\" /></audio>\r\n        response = <h1 id=\"end-response\">Great job</h1>;\r\n    }\r\n    \r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"content\">\r\n                {response}\r\n                <h1 id=\"score\">{percentCorrect}%</h1>\r\n                <h3>Correct Answers: {props.correct.length}</h3>\r\n                <h3>Incorrect Answers: {props.wrong.length}</h3>\r\n                <button onClick={props.transfer} className=\"menu button\" id=\"menu-return-button\">Return to menu</button>\r\n            </div>\r\n            {audio}\r\n            {particleEffect}\r\n        </div>\r\n        );\r\n}\r\n\r\n//component that will display the users stats and handle logic for computing them\r\nfunction Stats(props) {\r\n\r\n    return (\r\n        null\r\n        );\r\n}\r\n\r\n\r\n//component that will display the game based on its current state\r\nfunction GameScreen(props) {\r\n\r\n\r\n    switch (props.currentState) {\r\n        case \"loading\":\r\n            return <Loading audioSlide={props.audioSlide} audioLobby={props.audioLobby} loaded={props.loaded} />;\r\n            break;\r\n        case \"start\":\r\n            return <Welcome database={props.database} audioSlide={props.audioSlide} audioLobby={props.audioLobby} />;\r\n            break;\r\n        case \"game\":\r\n            return <PlayGame results={props.results} questionNumber={props.questionNumber} checkAnswer={props.checkAnswer}\r\n                transfer={props.transferToEnd} check={props.check} incrementQuestion={props.incrementQuestion} playerAnswer={props.playerAnswer}\r\n                saveResult={props.saveResult} saveAnswerOrder={props.saveAnswerOrder} answerArray={props.answerArray} answerCorrect={props.answerCorrect} transferToStartMenu={props.transferToStartMenu} />;\r\n            break;\r\n        case \"end\":\r\n            return <GameOver correct={props.correct} wrong={props.wrong} transfer={props.transferToStartMenu} />;\r\n            break;\r\n        case \"stats\":\r\n\r\n            break;\r\n        default:\r\n            return <h1>An error has occured</h1>;\r\n            break\r\n\t}\r\n}\r\n\r\n//helper function to remove html special entities and replace them with corresponding character\r\nfunction cleanString(string) {\r\n    return string.replace(/&quot;/g, '\\\"').replace(/&#039;/g, '\\'').replace(/&amp;/g, '\\&').replace(/&Uuml;/g, '\\Ü').replace(/&deg;/g, '\\°').replace(/&ouml;/g, '\\ö').replace(/&rsquo;/g, '\\'')\r\n        .replace(/&minus;/g, '\\-').replace(/&iacute;/g, '\\í').replace(/&oacute;/g, '\\ó').replace(/&rdquo;/g, '\\\"').replace(/&ldquo;/g, '\\\"').replace(/&lt;/g, '\\<').replace(/&lt;/g, '\\>')\r\n        .replace(/&ne;/g, '\\≠').replace(/&le;/g, '\\≤').replace(/&le;/g, '\\≥').replace(/&uuml;/g, '\\ü').replace(/&eacute;/g, '\\é').replace(/&aacute;/g, '\\á');\r\n}\r\n\r\n//Function to return firework particle effect\r\nfunction Fireworks(props) {\r\n    return (\r\n        <Particles options={{\r\n            background: {\r\n                color: \"#075FA3\",\r\n                opacity: 1\r\n            },\r\n            fullScreen: {\r\n                enable: true\r\n            },\r\n            fpsLimit: 60,\r\n            emitters: {\r\n                direction: \"top\",\r\n                life: {\r\n                    count: 0,\r\n                    duration: 0.1,\r\n                    delay: 0.1\r\n                },\r\n                rate: {\r\n                    delay: 0.5,\r\n                    quantity: 1\r\n                },\r\n                size: {\r\n                    width: 100,\r\n                    height: 0\r\n                },\r\n                position: {\r\n                    y: 100,\r\n                    x: 50\r\n                }\r\n            },\r\n            particles: {\r\n                number: {\r\n                    value: 0\r\n                },\r\n                destroy: {\r\n                    mode: \"split\",\r\n                    split: {\r\n                        count: 1,\r\n                        factor: { value: 1 / 3 },\r\n                        rate: {\r\n                            value: 100\r\n                        },\r\n                        particles: {\r\n                            stroke: {\r\n                                color: {\r\n                                    value: [\"#5bc0eb\", \"#fde74c\", \"#9bc53d\", \"#e55934\", \"#fa7921\"]\r\n                                },\r\n                                width: 1\r\n                            },\r\n                            number: {\r\n                                value: 0\r\n                            },\r\n                            collisions: {\r\n                                enable: false\r\n                            },\r\n                            opacity: {\r\n                                value: 1,\r\n                                animation: {\r\n                                    enable: true,\r\n                                    speed: 0.6,\r\n                                    minimumValue: 0.1,\r\n                                    sync: false,\r\n                                    startValue: \"max\",\r\n                                    destroy: \"min\"\r\n                                }\r\n                            },\r\n                            shape: {\r\n                                type: \"circle\"\r\n                            },\r\n                            size: {\r\n                                value: 1,\r\n                                animation: {\r\n                                    enable: false\r\n                                }\r\n                            },\r\n                            life: {\r\n                                count: 1,\r\n                                duration: {\r\n                                    value: {\r\n                                        min: 1,\r\n                                        max: 5\r\n                                    }\r\n                                }\r\n                            },\r\n                            move: {\r\n                                enable: true,\r\n                                gravity: {\r\n                                    enable: false\r\n                                },\r\n                                speed: 3,\r\n                                direction: \"none\",\r\n                                random: true,\r\n                                straight: false,\r\n                                outMode: \"destroy\"\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                life: {\r\n                    count: 2\r\n                },\r\n                shape: {\r\n                    type: \"line\"\r\n                },\r\n                size: {\r\n                    value: { min: 0.1, max: 90 },\r\n                    animation: {\r\n                        enable: true,\r\n                        sync: true,\r\n                        speed: 150,\r\n                        startValue: \"max\",\r\n                        destroy: \"min\"\r\n                    }\r\n                },\r\n                stroke: {\r\n                    color: {\r\n                        value: \"#ffffff\"\r\n                    },\r\n                    width: 1\r\n                },\r\n                rotate: {\r\n                    path: true\r\n                },\r\n                move: {\r\n                    enable: true,\r\n                    gravity: {\r\n                        acceleration: 15,\r\n                        enable: true,\r\n                        inverse: true,\r\n                        maxSpeed: 100\r\n                    },\r\n                    speed: { min: 10, max: 20 },\r\n                    outModes: {\r\n                        default: \"destroy\",\r\n                        top: \"none\"\r\n                    },\r\n                    \r\n                }\r\n            }\r\n        }}/>\r\n    )\r\n}\r\n\r\n//Funtion to return smoke particle effect\r\nfunction Smoke(props) {\r\n    return (\r\n        <Particles options={{\r\n            background: {\r\n                color: \"#075FA3\",\r\n                opacity: 1\r\n            },\r\n            fullScreen: {\r\n                enable: true\r\n            },\r\n            fpsLimit: 60,\r\n            particles: {\r\n                number: {\r\n                    value: 0,\r\n                    density: {\r\n                        enable: true,\r\n                        value_area: 800\r\n                    }\r\n                },\r\n                color: {\r\n                    value: \"#ff0000\",\r\n                    animation: {\r\n                        enable: true,\r\n                        speed: 20,\r\n                        sync: true\r\n                    }\r\n                },\r\n                shape: {\r\n                    type: \"image\",\r\n                    options: {\r\n                        image: {\r\n                            src:\r\n                                \"https://www.blog.jonnycornwell.com/wp-content/uploads/2012/07/Smoke10.png\",\r\n                            width: 256,\r\n                            height: 256\r\n                        }\r\n                    }\r\n                },\r\n                opacity: {\r\n                    value: 1,\r\n                    random: false,\r\n                    animation: {\r\n                        enable: true,\r\n                        speed: 0.5,\r\n                        minimumValue: 0,\r\n                        sync: false\r\n                    }\r\n                },\r\n                size: {\r\n                    value: 64,\r\n                    random: { enable: true, minimumValue: 32 },\r\n                    animation: {\r\n                        enable: false,\r\n                        speed: 20,\r\n                        minimumValue: 0.1,\r\n                        sync: false\r\n                    }\r\n                },\r\n                links: {\r\n                    enable: false,\r\n                    distance: 100,\r\n                    color: \"#ffffff\",\r\n                    opacity: 0.4,\r\n                    width: 1\r\n                },\r\n                life: {\r\n                    duration: {\r\n                        value: 20\r\n                    },\r\n                    count: 1\r\n                },\r\n                move: {\r\n                    enable: true,\r\n                    gravity: {\r\n                        enable: true,\r\n                        acceleration: -0.5\r\n                    },\r\n                    speed: 3,\r\n                    direction: \"top\",\r\n                    random: false,\r\n                    straight: false,\r\n                    outModes: {\r\n                        default: \"destroy\",\r\n                        bottom: \"none\"\r\n                    },\r\n                    attract: {\r\n                        enable: true,\r\n                        distance: 300,\r\n                        rotate: {\r\n                            x: 600,\r\n                            y: 1200\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            emitters: {\r\n                direction: \"top\",\r\n                rate: {\r\n                    quantity: 50,\r\n                    delay: 0.05\r\n                },\r\n                size: {\r\n                    width: 100,\r\n                    height: 10\r\n                },\r\n                position: {\r\n                    x: 50,\r\n                    y: 110\r\n                }\r\n            }\r\n        }} />\r\n    )\r\n}\r\n\r\n//Funtion to return rain particle effect\r\nfunction Rain(props) {\r\n    return (\r\n        <Particles className=\"particles\"\r\n            options={{\r\n            background: {\r\n                color: \"#E52809\",\r\n                opacity: .7\r\n            },\r\n            fullScreen: {\r\n                enable: true\r\n            },\r\n            fpsLimit: 60,\r\n            particles: {\r\n                color: {\r\n                    value: \"#ffffff\"\r\n                },\r\n                lineLinked: {\r\n                    blink: false,\r\n                    color: \"#000\",\r\n                    consent: false,\r\n                    distance: 150,\r\n                    enable: false,\r\n                    opacity: 0,\r\n                    width: 0\r\n                },\r\n                rotate: {\r\n                    value: 0,\r\n                    random: false,\r\n                    direction: \"clockwise\",\r\n                    animation: {\r\n                        enable: false,\r\n                        speed: 5,\r\n                        sync: false\r\n                    }\r\n                },\r\n                move: {\r\n                    attract: {\r\n                        enable: false,\r\n                        rotateX: 600,\r\n                        rotateY: 1200\r\n                    },\r\n                    bounce: false,\r\n                    direction: \"bottom\",\r\n                    enable: true,\r\n                    outMode: \"out\",\r\n                    random: true,\r\n                    speed: 30,\r\n                    straight: true\r\n                },\r\n                number: {\r\n                    density: {\r\n                        enable: true,\r\n                        area: 800\r\n                    },\r\n                    limit: 0,\r\n                    value: 200\r\n                },\r\n                opacity: {\r\n                    animation: {\r\n                        enable: false,\r\n                        minimumValue: 0.1,\r\n                        speed: 1,\r\n                        sync: false\r\n                    },\r\n                    random: false,\r\n                    value: 1\r\n                },\r\n                shape: {\r\n                    character: {\r\n                        fill: false,\r\n                        font: \"Verdana\",\r\n                        style: \"\",\r\n                        value: \"*\",\r\n                        weight: \"400\"\r\n                    },\r\n                    image: [],\r\n                    polygon: {\r\n                        nb_sides: 5\r\n                    },\r\n                    stroke: {\r\n                        color: \"#efefefee\",\r\n                        width: 1\r\n                    },\r\n                    type: \"line\"\r\n                },\r\n                size: {\r\n                    animation: {\r\n                        enable: false,\r\n                        minimumValue: 0.1,\r\n                        speed: 40,\r\n                        sync: false\r\n                    },\r\n                    random: true\r\n                }\r\n            },\r\n            polygon: {\r\n                draw: {\r\n                    enable: false,\r\n                    lineColor: \"#ffffff\",\r\n                    lineWidth: 0.5\r\n                },\r\n                move: {\r\n                    radius: 10\r\n                },\r\n                scale: 1,\r\n                type: \"none\",\r\n                url: \"\"\r\n            }\r\n            }} />\r\n    )\r\n}\r\n\r\n//Funtion to return confetti particle effect\r\nfunction Confetti(props) {\r\n    return (\r\n        <Particles className=\"particles\"\r\n            options={{\r\n                background: {\r\n                    color: \"#18A835\",\r\n                    opacity: .5\r\n                },\r\n                fullScreen: {\r\n                    enable: true\r\n                },\r\n                particles: {\r\n                    number: {\r\n                        value: 0\r\n                    },\r\n                    color: {\r\n                        value: [\"#1E00FF\", \"#FF0061\", \"#E1FF00\", \"#00FF9E\"]\r\n                    },\r\n                    shape: {\r\n                        type: [\"circle\", \"square\"]\r\n                    },\r\n                    opacity: {\r\n                        value: {\r\n                            max: 1,\r\n                            min: 0\r\n                        },\r\n                        animation: {\r\n                            enable: true,\r\n                            speed: 2,\r\n                            startValue: \"max\",\r\n                            destroy: \"min\"\r\n                        }\r\n                    },\r\n                    size: {\r\n                        value: { min: 3, max: 7 }\r\n                    },\r\n                    life: {\r\n                        duration: {\r\n                            sync: true,\r\n                            value: 5\r\n                        },\r\n                        count: 1\r\n                    },\r\n                    move: {\r\n                        enable: true,\r\n                        gravity: {\r\n                            enable: true,\r\n                            acceleration: 20\r\n                        },\r\n                        speed: {\r\n                            min: 25,\r\n                            max: 50\r\n                        },\r\n                        drift: {\r\n                            min: -2,\r\n                            max: 2\r\n                        },\r\n                        decay: 0.05,\r\n                        direction: \"none\",\r\n                        outModes: {\r\n                            default: \"destroy\",\r\n                            top: \"none\"\r\n                        }\r\n                    },\r\n                    rotate: {\r\n                        value: {\r\n                            min: 0,\r\n                            max: 360\r\n                        },\r\n                        direction: \"random\",\r\n                        move: true,\r\n                        animation: {\r\n                            enable: true,\r\n                            speed: 60\r\n                        }\r\n                    },\r\n                    tilt: {\r\n                        direction: \"random\",\r\n                        enable: true,\r\n                        move: true,\r\n                        value: {\r\n                            min: 0,\r\n                            max: 360\r\n                        },\r\n                        animation: {\r\n                            enable: true,\r\n                            speed: 60\r\n                        }\r\n                    },\r\n                    roll: {\r\n                        darken: {\r\n                            enable: true,\r\n                            value: 25\r\n                        },\r\n                        enable: true,\r\n                        speed: {\r\n                            min: 15,\r\n                            max: 25\r\n                        }\r\n                    },\r\n                    wobble: {\r\n                        distance: 30,\r\n                        enable: true,\r\n                        move: true,\r\n                        speed: {\r\n                            min: -15,\r\n                            max: 15\r\n                        }\r\n                    }\r\n                },\r\n                responsive: [\r\n                    {\r\n                        maxWidth: 700,\r\n                        options: {\r\n                            particles: {\r\n                                move: {\r\n                                    speed: 20,\r\n                                    decay: 0.1\r\n                                }\r\n                            },\r\n                            emitters: [\r\n                                {\r\n                                    direction: \"top-right\",\r\n                                    rate: {\r\n                                        delay: 0.1,\r\n                                        quantity: 3\r\n                                    },\r\n                                    position: {\r\n                                        x: 0,\r\n                                        y: 50\r\n                                    },\r\n                                    size: {\r\n                                        width: 0,\r\n                                        height: 0\r\n                                    }\r\n                                },\r\n                                {\r\n                                    direction: \"top-left\",\r\n                                    rate: {\r\n                                        delay: 0.1,\r\n                                        quantity: 3\r\n                                    },\r\n                                    position: {\r\n                                        x: 100,\r\n                                        y: 50\r\n                                    },\r\n                                    size: {\r\n                                        width: 0,\r\n                                        height: 0\r\n                                    }\r\n                                }\r\n                            ]\r\n                        }\r\n                    }\r\n                ],\r\n                emitters: [\r\n                    {\r\n                        direction: \"top-right\",\r\n                        rate: {\r\n                            delay: 0.1,\r\n                            quantity: 10\r\n                        },\r\n                        position: {\r\n                            x: 0,\r\n                            y: 50\r\n                        },\r\n                        size: {\r\n                            width: 0,\r\n                            height: 0\r\n                        }\r\n                    },\r\n                    {\r\n                        direction: \"top-left\",\r\n                        rate: {\r\n                            delay: 0.1,\r\n                            quantity: 10\r\n                        },\r\n                        position: {\r\n                            x: 100,\r\n                            y: 50\r\n                        },\r\n                        size: {\r\n                            width: 0,\r\n                            height: 0\r\n                        }\r\n                    }\r\n                ]\r\n\r\n            }}/>\r\n    )\r\n}\r\n\r\nfunction BouncingBalls(props) {\r\n    return (\r\n        <Particles className=\"particles\"\r\n            options={{\r\n                fullScreen: {\r\n                    enable: true\r\n                },\r\n                fpsLimit: 60,\r\n                particles: {\r\n                    number: {\r\n                        value: 80,\r\n                        density: {\r\n                            enable: true,\r\n                            area: 800\r\n                        }\r\n                    },\r\n                    color: {\r\n                        value: \"#ffffff\"\r\n                    },\r\n                    shape: {\r\n                        type: \"circle\",\r\n                        stroke: {\r\n                            width: 0,\r\n                            color: \"#000000\"\r\n                        },\r\n                        polygon: {\r\n                            sides: 5\r\n                        },\r\n                        image: {\r\n                            src: \"https://cdn.matteobruni.it/images/particles/github.svg\",\r\n                            width: 100,\r\n                            height: 100\r\n                        }\r\n                    },\r\n                    opacity: {\r\n                        value: 0.5,\r\n                        random: false,\r\n                        animation: {\r\n                            enable: false,\r\n                            speed: 1,\r\n                            minimumValue: 0.1,\r\n                            sync: false\r\n                        }\r\n                    },\r\n                    size: {\r\n                        value: 10,\r\n                        random: { enable: true, minimumValue: 5 },\r\n                        animation: {\r\n                            enable: false,\r\n                            speed: 40,\r\n                            minimumValue: 5,\r\n                            sync: false\r\n                        }\r\n                    },\r\n                    lineLinked: {\r\n                        enable: false,\r\n                        distance: 150,\r\n                        color: \"#ffffff\",\r\n                        opacity: 0.4,\r\n                        width: 1\r\n                    },\r\n                    move: {\r\n                        collisions: true,\r\n                        enable: true,\r\n                        speed: 7,\r\n                        direction: \"none\",\r\n                        random: false,\r\n                        straight: false,\r\n                        out_mode: \"bounce\",\r\n                        attract: {\r\n                            enable: false,\r\n                            rotateX: 600,\r\n                            rotateY: 1200\r\n                        }\r\n                    }\r\n                },\r\n                interactivity: {\r\n                    detect_on: \"canvas\",\r\n                    events: {\r\n                        onHover: {\r\n                            enable: false,\r\n                            mode: \"repulse\",\r\n                            parallax: {\r\n                                enable: false,\r\n                                force: 60,\r\n                                smooth: 10\r\n                            }\r\n                        },\r\n                        onClick: {\r\n                            enable: true,\r\n                            mode: \"push\"\r\n                        },\r\n                        resize: true\r\n                    },\r\n                    modes: {\r\n                        grab: {\r\n                            distance: 400,\r\n                            line_linked: {\r\n                                opacity: 1\r\n                            }\r\n                        },\r\n                        bubble: {\r\n                            distance: 400,\r\n                            size: 40,\r\n                            duration: 2,\r\n                            opacity: 0.8,\r\n                            speed: 3\r\n                        },\r\n                        repulse: {\r\n                            distance: 200\r\n                        },\r\n                        push: {\r\n                            particles_nb: 4\r\n                        },\r\n                        remove: {\r\n                            particles_nb: 2\r\n                        }\r\n                    }\r\n                },\r\n                detectRetina: true,\r\n            }}/>\r\n        )\r\n}\r\n\r\n\r\nexport default GameScreen","import * as React from 'react';\r\nimport { render } from 'react-dom';\r\nimport GameScreen from './MyComponents';\r\n\r\nclass App extends React.Component{\r\n\r\n    \r\n\r\n    \r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        //setting the game state of the app to start when the app is constructed\r\n        this.state = { gameState: \"loading\", results: null, questionNumber: 1, playerAnswer: null, correct: [], wrong: [], check: false, answerArray: [], answerCorrect: false };\r\n\r\n        this.apiCall = this.apiCall.bind(this);\r\n        this.increment = this.increment.bind(this);\r\n        this.checkAnswer = this.checkAnswer.bind(this);\r\n        this.transferToEnd = this.transferToEnd.bind(this);\r\n        this.transferToStat = this.transferToStat.bind(this);\r\n        this.transferToStartMenu = this.transferToStartMenu.bind(this);\r\n        this.saveResult = this.saveResult.bind(this);\r\n        this.saveAnswerOrder = this.saveAnswerOrder.bind(this);\r\n        this.loaded = this.loaded.bind(this);\r\n\r\n        \r\n    }\r\n\r\n    audioSlide = new Audio(\"enter.wav\");\r\n    audioLobby = new Audio(\"loop.mp3\");\r\n    \r\n\r\n    audioLoadedCount = 0;\r\n\r\n    loaded() {\r\n        this.audioLoadedCount++;\r\n        if (this.audioLoadedCount == 2) {\r\n            this.setState({ gameState: \"start\" });\r\n        }\r\n    }\r\n\r\n\r\n    //function to retrieve the trivia questions from the JSON API\r\n    apiCall(e) {\r\n\r\n        //preventing the submit buttons default behavior\r\n        e.preventDefault();\r\n\r\n        //saving the base url\r\n        let url = 'https://opentdb.com/api.php?';\r\n\r\n        //adding the amount of questions to the url\r\n        url += \"amount=\" + e.target.amount.value;\r\n\r\n        //adding to url based on user input\r\n        if (e.target.category.value != \"any\")\r\n        {\r\n            url += \"&category=\" + e.target.category.value;\r\n        }\r\n\r\n        if (e.target.difficulty.value != \"any\")\r\n        {\r\n            url += \"&difficulty=\" + e.target.difficulty.value;\r\n        }\r\n\r\n        if (e.target.type.value != \"any\")\r\n        {\r\n            url += \"&type=\" + e.target.type.value;\r\n        }\r\n\r\n        //variable to hold the api call results\r\n        let results;\r\n\r\n        //trying to retrieve info\r\n        try {\r\n            fetch(url)\r\n                .then(response => response.json())\r\n                .then(data => results = data)\r\n                .then(() => {\r\n                    if (results.response_code) { alert(\"Could not retrieve questions. Please try again\"); return; };\r\n                    this.setState({ gameState: \"game\", results: results.results });\r\n                });\r\n        }\r\n        catch (error) {\r\n            alert(\"An error occured while trying to retrive questions\")\r\n        }\r\n\r\n    }\r\n\r\n    saveAnswerOrder(array) {\r\n        this.setState({ answerArray: array });\r\n    }\r\n\r\n\r\n    //Method that handles changing the game state to the answer check state\r\n    checkAnswer(e) {\r\n        if (e.target) {\r\n            if (e.target.value == this.state.results[this.state.questionNumber-1].correct_answer) {\r\n                this.setState({ playerAnswer: e.target.value, check: true, answerCorrect: true });\r\n            }\r\n            else {\r\n                this.setState({ playerAnswer: e.target.value, check: true, answerCorrect: false });\r\n            }\r\n        }\r\n        else {\r\n            this.setState({ playerAnswer: null, check: true, answerCorrect: false });\r\n        }\r\n    }\r\n\r\n\r\n    //Method that increments the question count and sets the state back to game and resets player answer\r\n    increment() {\r\n        this.setState({ questionNumber: ++this.state.questionNumber, playerAnswer: null, check: false, answerArray: [], answerCorrect: false });\r\n    }\r\n\r\n    //Method to save question info to array for later usage\r\n    saveResult(correct, questionInfo) {\r\n        questionInfo[\"questionNumber\"] = this.state.questionNumber;\r\n        if (correct) {\r\n            this.setState(state => {\r\n                const correct = state.correct.concat(questionInfo);\r\n                return {\r\n                    correct\r\n                };\r\n            })\r\n        }\r\n        else {\r\n            this.setState(state => {\r\n                const wrong = state.wrong.concat(questionInfo);\r\n                return {\r\n                    wrong\r\n                };\r\n            })\r\n        }\r\n    }\r\n\r\n    //Method that changes the game state to the end sreen\r\n    transferToEnd() {\r\n        this.setState({ gameState: \"end\", questionNumber: 1, playerAnswer: null})\r\n    }\r\n\r\n    //Method that changes game state to the stat screen\r\n    transferToStat() {\r\n        this.setState({ gameState:\"stats\" })\r\n    }\r\n\r\n    //Method that changes the game state to the start menu\r\n    transferToStartMenu() {\r\n        this.setState({ gameState: \"start\", results: null, correct: [], wrong: [], answerArray: [], playerAnswer: null, check: false, answerCorrect: false })\r\n    }\r\n\r\n\r\n    render(){\r\n        return (\r\n            <div id=\"app\">\r\n                <GameScreen currentState={this.state.gameState} database={this.apiCall} results={this.state.results} questionNumber={this.state.questionNumber}\r\n                    incrementQuestion={this.increment} playerAnswer={this.state.playerAnswer} checkAnswer={this.checkAnswer} transferToEnd={this.transferToEnd} transferToStat={this.transferToStat}\r\n                    transferToStartMenu={this.transferToStartMenu} saveResult={this.saveResult} correct={this.state.correct} wrong={this.state.wrong} check={this.state.check}\r\n                    saveAnswerOrder={this.saveAnswerOrder} answerArray={this.state.answerArray} answerCorrect={this.state.answerCorrect} audioSlide={this.audioSlide} audioLobby={this.audioLobby} loaded={this.loaded} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}